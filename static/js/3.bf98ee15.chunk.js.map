{"version":3,"sources":["components/dialog/Dialog.module.css","components/dialog/User/User.module.css","components/dialog/DialogPosts/DialogPosts.module.css","components/dialog/User/User.jsx","components/dialog/DialogPosts/DialogPosts.jsx","components/dialog/DialogForm.jsx","components/dialog/Dialog.jsx","redux/store.js","components/dialog/DialogContainer.jsx"],"names":["module","exports","container","users","dialogs","textPost","user","User","props","React","createElement","className","classes","src","ava","miniAva","NavLink","to","id","name","DialogPosts","text","maxLength10","maxLength","DialogReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","FormControls","validate","required","DialogForm","data","clickOnDialogButton","messageText","console","log","Dialog","usersInfo","usersNameArr","map","elem","i","word","split","toUpperCase","join","userAva","textPostsArr","lorem","LoremIpsum","store","_state","messages","generateWords","newMessageTexts","generateSentences","profile","myAva","newPostTexts","postsInMainPage","getState","this","renderer","state","subscribe","observer","dispatch","action","profileReducer","messageReducer","window","compose","connect","AuthRedirect"],"mappings":"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","file":"static/js/3.bf98ee15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dialog_container__eGyvk\",\"users\":\"Dialog_users__3d-65\",\"dialogs\":\"Dialog_dialogs__1n-nj\",\"textPost\":\"Dialog_textPost__2reRr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3PqE1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textPost\":\"DialogPosts_textPost__3j3-q\"};","import { NavLink } from \"react-router-dom/cjs/react-router-dom.min\";\nimport classes from \"./User.module.css\";\nimport React, { Component }  from 'react';\n\n\nconst User = (props) => {\n\treturn (\n\t\t<div className={classes.user}>\n\t\t\t<img src={props.ava} className={classes.miniAva}></img>\n\t\t\t<NavLink to={\"/messages/\" + props.id} className={classes.user}>\n\t\t\t\t{props.name} \n\t\t\t</NavLink>\n\t\t</div>\n\n\t)\n}\nexport default User;","import classes from \"./DialogPosts.module.css\";\nimport React, { Component }  from 'react';\n\n\nconst DialogPosts = (props) => {\n\treturn (\n\t\t<div className={classes.textPost}>\n\t\t\t{props.text}\n\t\t</div>\n\n\t)\n}\nexport default DialogPosts;","import React, { Component }  from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport {FormControls} from '../FormControls/FormContros'\nimport {required, maxLength} from '../../utils/validators/validators'\nconst maxLength10 = maxLength(10);\nconst DialogForm = (props) => {\t        \n    const dataFromForm = data => {\n        props.clickOnDialogButton(data.messageText);\n        console.log(data)\n    }\n        return <main>\n            <div>\n               <h2>сообщение</h2>\n            </div>\n            <DialogReduxForm onSubmit={dataFromForm}/>                    \t            \n        </main>\n    }\n\nconst Form = (props) => {\n    return <div>\n        <form onSubmit={props.handleSubmit}>\n        {/* <textarea onChange={textAreaInConsole} ref={textElement} value={props.usersInfo.newMessageTexts}></textarea>\n        \n        <button onClick={() => props.clickOnDialogButton()}>отправить</button> */}\n        <div><Field placeholder={\"текст сообщения\"} component={FormControls} name={\"messageText\"} validate={[required, maxLength10]}/></div>\n            <div><button>отправить</button></div>\n        </form>     \n    </div>\n}\n\nlet DialogReduxForm = reduxForm({   \n    form: 'dialog'\n  })(Form)\n\nexport default DialogForm;\n\n  \n\n\n\n\n\n","import React from 'react';\nimport classes from \"./Dialog.module.css\";\nimport User from './User/User.jsx'\nimport DialogPosts from './DialogPosts/DialogPosts.jsx' \nimport DialogForm from './DialogForm.jsx' \n\n\nlet userName = (word) => {\t\n\tword = word.split(\"\");\n\tword[0] = word[0].toUpperCase();\n\treturn word = word.join(\"\");\n}\n\nconst Dialog = (props) => {\t\t\n    return (\n\t\t<div className={classes.container}>\n\t\t\t<div className={classes.users}>\n\t\t\t\t<b>Users: </b>\t\t\t\t\n\t\t\t\t{props.usersInfo.usersNameArr.map((elem, i) => <User name={userName(elem)} id = {i+1} ava={props.usersInfo.userAva[i]}/>)}\n\t\t\t</div>\n\t\t\t<div className={classes.dialogs}>\t\t\t\t\n\t\t\t\t{props.usersInfo.textPostsArr.map(elem => <DialogPosts text={elem}/>)}\n\t\t\t</div>\n\t\t\t<div className={classes.textPost}>\n\t\t\t\t<DialogForm {...props}/>\n\t\t\t</div>\n\t\t</div>\n\t)}\n\nexport default Dialog;\n","\n// import {renderer} from '../render.js'\nimport { LoremIpsum } from \"lorem-ipsum\";\nimport { useReducer } from \"react/cjs/react.production.min\";\nimport profileReducer from \"./profile-reducer.js\"\nimport messageReducer from \"./message-reducer.js\"\n// lorem.generateWords(1);\n// lorem.generateSentences(5);\n// lorem.generateParagraphs(7);\nlet lorem = new LoremIpsum();\n\nlet store = {\n    _state: {\n        messages: {\n            usersNameArr: [\n                lorem.generateWords(1),\n                lorem.generateWords(1),\n                lorem.generateWords(1),\t\n            ],\n            userAva: [\n                \"https://mir-s3-cdn-cf.behance.net/project_modules/disp/10f13510774061.560eadfde5b61.png\",\n                \"https://avatarfiles.alphacoders.com/209/thumb-209797.jpg\",\n                \"https://i1.sndcdn.com/avatars-000547985256-ntiz46-t500x500.jpg\"\n            ],\n            newMessageTexts: \"\",\n            textPostsArr: [\n                lorem.generateSentences(3),\n                lorem.generateSentences(3),\n                lorem.generateSentences(3),\n                lorem.generateSentences(3)\n            ],\n        },\n        profile: {\n            myAva: \"https://s1.narvii.com/image/ryjgek6wsqpdydpjxwl5xm3irpibcxzc_hq.jpg\",\n            newPostTexts:\"\",    \n            postsInMainPage: [\n                \"прив\",\n                \"как\",\n                \"дел\"\n            ],\n        },\n    },\n    getState() {\n        return this._state\n    },\n    renderer(state) {\n        console.log(\"пустая функция которая заменится observer'ом\")\n    }, \n    subscribe(observer) {\n        this.renderer = observer;\n    },\n    dispatch(action) {\n        this._state.profile = profileReducer(this._state.profile, action);\n        this._state.messages = messageReducer(this._state.messages, action);\n        this.renderer(this._state);\n    },\n}\n\nwindow.store = store;\nexport default store;","import React from 'react';\nimport classes from \"./Dialog.module.css\";\nimport User from './User/User.jsx'\nimport Dialog from './Dialog.jsx' \nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport store from '../../redux/store.js'\nimport {updateTextAreaDialog, clickOnDialogButton} from '../../redux/message-reducer.js'\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {AuthRedirect} from '../../HOC/AuthRedirect';\nimport { compose } from 'redux';\n\n\n// const DialogContainer = () => {\n// \treturn (\n// \t\t<storeContext.Consumer>{\n// \t\t\t(store) => {\n// \t\t\t\t\treturn <Dialog dispatch={store.dispatch} usersInfo={store.getState().messages}/>\n// \t\t\t\t}\n// \t\t\t}\t\t\t\n// \t\t</storeContext.Consumer>\n\t\t\n// \t)\t\n// }\nlet mapStateToProps = (state) => {\n\treturn {\n\t\tusersInfo: state.messages,\t\t\n\t}\n}\n\nlet mapDispatchToProps = (dispatch) => {\n\treturn {\t\t\t\n\t\tclickOnDialogButton: (text) => dispatch(clickOnDialogButton(text)),\n\t}\n}\n\nexport default compose(\n\tconnect(mapStateToProps, mapDispatchToProps),\n\tAuthRedirect\n\t)(Dialog);\n\n\n\n"],"sourceRoot":""}